---
kind: pipeline
type: docker
name: kepub

platform:
  os: linux
  arch: amd64

steps:
- name: test-html
  image: golang:1.13.6-buster
  commands:
  - go test -mod=readonly -run "^TestMod_" golang.org/x/net/html -v
  environment:
    GO111MODULE: on

- name: test
  image: golang:1.13.6-buster
  commands:
  - go test -mod=readonly ./kepub -v
  environment:
    GO111MODULE: on

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: kepubify

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.13.6-buster
  commands:
  - go test -mod=readonly . -v
  environment:
    GO111MODULE: on

- name: run
  image: golang:1.13.6-buster
  commands:
  - go run -mod=readonly . --help
  environment:
    GO111MODULE: on

trigger:
  event:
    exclude:
    - promote

depends_on:
- kepub

---
kind: pipeline
type: docker
name: covergen

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.13.6-buster
  commands:
  - go test -mod=readonly ./covergen -v
  environment:
    GO111MODULE: on

- name: run
  image: golang:1.13.6-buster
  commands:
  - go run -mod=readonly ./covergen --help
  environment:
    GO111MODULE: on

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: seriesmeta

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.13.6-buster
  commands:
  - go test -mod=readonly ./seriesmeta -v
  environment:
    GO111MODULE: on

- name: run
  image: golang:1.13.6-buster
  commands:
  - go run -mod=readonly ./seriesmeta --help
  environment:
    GO111MODULE: on

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: notes
  image: golang:1.13.6-buster
  commands:
  - mkdir -p build
  - git fetch --tags
  - git describe --tags --always | tee build/version
  - git describe --tags --always | sed -E -e 's/^v([^-]*)$/\1/g' -e 's/^v([^-]*)-([^-]*)-(.*)$/\1~\2.\3/g' | tee build/debversion
  - git log "$(git describe --tags --abbrev=0 HEAD~1)..HEAD" --oneline --format='%h %s' | tee build/notes.md

- name: x-kepubify-linux-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - linux/amd64
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/kepubify-linux-64bit" .
  environment:
    GO111MODULE: on

- name: x-kepubify-linux-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - linux/386
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/kepubify-linux-32bit" .
  environment:
    GO111MODULE: on

- name: x-kepubify-linux-armv6
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-arm
  command:
  - --platforms
  - linux/armv6
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/kepubify-linux-arm" .
  environment:
    GO111MODULE: on

- name: x-kepubify-darwin-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-darwin
  command:
  - --platforms
  - darwin/amd64
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/kepubify-darwin-64bit" .
  environment:
    GO111MODULE: on

- name: x-kepubify-windows-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - windows/amd64
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/kepubify-windows-64bit.exe" .
  environment:
    GO111MODULE: on

- name: x-kepubify-windows-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - windows/386
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/kepubify-windows-32bit.exe" .
  environment:
    GO111MODULE: on

- name: x-covergen-linux-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - linux/amd64
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/covergen-linux-64bit" ./covergen
  environment:
    GO111MODULE: on

- name: x-covergen-linux-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - linux/386
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/covergen-linux-32bit" ./covergen
  environment:
    GO111MODULE: on

- name: x-covergen-linux-armv6
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-arm
  command:
  - --platforms
  - linux/armv6
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/covergen-linux-arm" ./covergen
  environment:
    GO111MODULE: on

- name: x-covergen-darwin-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-darwin
  command:
  - --platforms
  - darwin/amd64
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/covergen-darwin-64bit" ./covergen
  environment:
    GO111MODULE: on

- name: x-covergen-windows-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - windows/amd64
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/covergen-windows-64bit.exe" ./covergen
  environment:
    GO111MODULE: on

- name: x-covergen-windows-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - windows/386
  - --build-cmd
  - go env; CGO_ENABLED=0 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/covergen-windows-32bit.exe" ./covergen
  environment:
    GO111MODULE: on

- name: x-seriesmeta-linux-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - linux/amd64
  - --build-cmd
  - go env; CGO_ENABLED=1 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/seriesmeta-linux-64bit" ./seriesmeta
  environment:
    GO111MODULE: on

- name: x-seriesmeta-linux-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - linux/386
  - --build-cmd
  - go env; CGO_ENABLED=1 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/seriesmeta-linux-32bit" ./seriesmeta
  environment:
    GO111MODULE: on

- name: x-seriesmeta-linux-armv6
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-arm
  command:
  - --platforms
  - linux/armv6
  - --build-cmd
  - go env; CGO_ENABLED=1 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/seriesmeta-linux-arm" ./seriesmeta
  environment:
    GO111MODULE: on

- name: x-seriesmeta-darwin-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-darwin
  command:
  - --platforms
  - darwin/amd64
  - --build-cmd
  - go env; CGO_ENABLED=1 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/seriesmeta-darwin-64bit" ./seriesmeta
  environment:
    GO111MODULE: on

- name: x-seriesmeta-windows-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - windows/amd64
  - --build-cmd
  - go env; CGO_ENABLED=1 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/seriesmeta-windows-64bit.exe" ./seriesmeta
  environment:
    GO111MODULE: on

- name: x-seriesmeta-windows-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command:
  - --platforms
  - windows/386
  - --build-cmd
  - go env; CGO_ENABLED=1 go build -ldflags "-s -w -X main.version=$(cat build/version)" -o "build/seriesmeta-windows-32bit.exe" ./seriesmeta
  environment:
    GO111MODULE: on

- name: debian
  image: golang:1.13.6-buster
  commands:
  - go install github.com/goreleaser/nfpm/cmd/nfpm
  - VERSION=$(cat build/debversion) nfpm pkg -f nfpm.yaml -t build/kepubify_$(cat build/debversion)_amd64.deb
  environment:
    GO111MODULE: on

- name: ls
  image: golang:1.13.6-buster
  commands:
  - apt update && apt install -y file
  - file build/*
  - ls -lah build/*

- name: release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: GITHUB_TOKEN
    draft: true
    files:
    - build/kepubify*
    - build/covergen*
    - build/seriesmeta*
    notes: build/notes.md

trigger:
  event:
    exclude:
    - promote

depends_on:
- kepub
- kepubify
- covergen
- seriesmeta

...
